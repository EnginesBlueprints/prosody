{"software":{"name":"prosody","major":null,"minor":1,"release_level":"Alpha","patch":null,"license_name":"standard_open_source_initiative_mit_license","license_label":"Standard Open Source Initiative MIT License","license_sourceurl":"http://opensource.org/licenses/MIT","full_title":"Prosody XMPP communication server","short_title":"Prosody","description":"XMPP is an open and free alternative to commercial messaging and chat providers. Set it up for your company, organisation, or just your family and friends. You are in control, and your communication is private to you. Supporting a wide range of client software for desktop and mobile platforms, you can chat using Prosody from any device.","icon_url":"https://prosody.im/prosody.png","home_page_url":"https://prosody.im/","support_page_url":"","about":"Prosody is a modern XMPP communication server. It aims to be easy to set up and configure, and efficient with system resources. Additionally, for developers it aims to be easy to extend and give a flexible system on which to rapidly develop added functionality, or prototype new protocols.\r\n\r\nProsody is open-source software under the permissive MIT/X11 license.","language":"lua","framework":"lua","deployment_type":"worker","web_root_directory":"","first_run_url":"","publisher":"engines","blocking_worker_name":null,"required_memory":96,"recommended_memory":128,"http_protocol":"http_and_https","framework_port_overide":null,"custom_start_script":"#!/bin/bash\r\nPID_FILE=/tmp/prosody.pid\r\nexport PID_FILE\r\n mkdir -p /var/log/prosody/\r\nif ! test -f /home/fs/config_and_data/installed\r\n then\r\n   \r\n    mkdir /home/fs/config_and_data/etc \r\n    cp -r /home/fs_src/config_and_data/etc/prosody /home/fs/config_and_data/etc\r\ncp /home/app/prosody.cfg.lua.build /home/fs/config_and_data/etc/prosody/prosody.cfg.lua\r\ntouch  /home/fs/config_and_data/installed\r\nfi\r\n. /home/trap.sh\r\nprosody \u0026\r\n\r\ntouch /engines/var/run/flags/startup_complete\r\n\r\nwait\r\n\r\nrm /tmp/prosody.pid\r\nrm /engines/var/run/flags/startup_complete","custom_install_script":"#!/bin/bash\r\n\r\ncd /tmp/\r\nmkdir prosody-build\r\ncd prosody-build\r\nwget https://prosody.im/downloads/source/prosody-0.9.10.tar.gz\r\ntar xzf prosody-0.9.10.tar.gz\r\ncd prosody-0.9.10\r\n ./configure --help\r\n ./configure --ostype=debian\r\nmake\r\nmake install\r\ncd /\r\nrm -rf /tmp/prosody-build\r\n\r\nluarocks install luasec\r\nluarocks install luafilesystem\r\nluarocks install luasocket\r\nluarocks install luaexpat\r\nluarocks install LuaDBI\r\nluarocks install luadbi-mysql MYSQL_INCDIR=/usr/include/mysql/\r\n\r\nluarocks install luasql-mysql MYSQL_INCDIR=/usr/include/mysql/\r\ncp /home/app/prosody.cfg.lua.build /usr/local/etc/prosody/prosody.cfg.lua\r\nprosodyctl register $admin_user  $Domainname $admin_password\r\necho prosodyctl register $admin_user  $Domainname","custom_post_install_script":"","service_configurations":[{"publisher_namespace":"EnginesSystem","type_path":"filesystem/local/filesystem","variables":{"permissions":"rw","engine_path":"config_and_data","service_name":"_Engines_Builder(engine_name)","volume_src":" ","group":"_Engines_Builder(data_gid)","user":"_Engines_Builder(data_uid)"}},{"publisher_namespace":"EnginesSystem","type_path":"database/sql/mysql","variables":{"collation":"utf8_general_ci","db_flavor":"mysql2","db_password":"_Engines_System(random(10))","db_username":"_Engines_Builder(engine_name)","database_name":"_Engines_Builder(engine_name)","database_host":"_Engines_System(mysql_host)","name":"_Engines_Builder(engine_name)","full_access":"false"}}],"persistent_directories":[{"path":"/usr/local/etc/prosody"}],"replacement_strings":[],"persistent_files":[],"installed_packages":[],"system_packages":[{"package":"lua5.1"},{"package":"liblua5.1-dev"},{"package":"libidn11-dev"},{"package":"libssl-dev"}],"workers":[],"ports":[{"port":5222,"external":5222,"protocol":"TCP and UDP"},{"port":5269,"external":5269,"protocol":"TCP and UDP"}],"external_repositories":[],"rake_tasks":[],"template_files":[{"title":"prosody.cfg.lua","path":"app/prosody.cfg.lua.build","content":"-- Prosody Example Configuration File\r\n--\r\n-- Information on configuring Prosody can be found on our\r\n-- website at http://prosody.im/doc/configure\r\n--\r\n-- Tip: You can check that the syntax of this file is correct\r\n-- when you have finished by running: luac -p prosody.cfg.lua\r\n-- If there are any errors, it will let you know what and where\r\n-- they are, otherwise it will keep quiet.\r\n--\r\n-- The only thing left to do is rename this file to remove the .dist ending, and fill in the\r\n-- blanks. Good luck, and happy Jabbering!\r\n\r\npidfile = \"/tmp/prosody.pid\"\r\n\r\n---------- Server-wide settings ----------\r\n-- Settings in this section apply to the whole server and are the default settings\r\n-- for any virtual hosts\r\n\r\n-- This is a (by default, empty) list of accounts that are admins\r\n-- for the server. Note that you must create the accounts separately\r\n-- (see http://prosody.im/doc/creating_accounts for info)\r\n-- Example: admins = { \"user1@example.com\", \"user2@example.net\" }\r\nadmins = {\"_Engines_Environment(admin_user)@_Engines_Builder(domain_name)\" }\r\n\r\n-- Enable use of libevent for better performance under high load\r\n-- For more information see: http://prosody.im/doc/libevent\r\n--use_libevent = true;\r\n\r\n-- This is the list of modules Prosody will load on startup.\r\n-- It looks for mod_modulename.lua in the plugins folder, so make sure that exists too.\r\n-- Documentation on modules can be found at: http://prosody.im/doc/modules\r\nmodules_enabled = {\r\n\r\n\t-- Generally required\r\n\t\t\"roster\"; -- Allow users to have a roster. Recommended ;)\r\n\t\t\"saslauth\"; -- Authentication for clients and servers. Recommended if you want to log in.\r\n\t\t\"tls\"; -- Add support for secure TLS on c2s/s2s connections\r\n\t\t\"dialback\"; -- s2s dialback support\r\n\t\t\"disco\"; -- Service discovery\r\n\r\n\t-- Not essential, but recommended\r\n\t\t\"private\"; -- Private XML storage (for room bookmarks, etc.)\r\n\t\t\"vcard\"; -- Allow users to set vCards\r\n\t\r\n\t-- These are commented by default as they have a performance impact\r\n\t\t--\"privacy\"; -- Support privacy lists\r\n\t\t--\"compression\"; -- Stream compression\r\n\r\n\t-- Nice to have\r\n\t\t\"version\"; -- Replies to server version requests\r\n\t\t\"uptime\"; -- Report how long server has been running\r\n\t\t\"time\"; -- Let others know the time here on this server\r\n\t\t\"ping\"; -- Replies to XMPP pings with pongs\r\n\t\t\"pep\"; -- Enables users to publish their mood, activity, playing music and more\r\n\t\t\"register\"; -- Allow users to register on this server using a client and change passwords\r\n\r\n\t-- Admin interfaces\r\n\t\t\"admin_adhoc\"; -- Allows administration via an XMPP client that supports ad-hoc commands\r\n\t\t--\"admin_telnet\"; -- Opens telnet console interface on localhost port 5582\r\n\t\r\n\t-- HTTP modules\r\n\t\t--\"bosh\"; -- Enable BOSH clients, aka \"Jabber over HTTP\"\r\n\t\t--\"http_files\"; -- Serve static files from a directory over HTTP\r\n\r\n\t-- Other specific functionality\r\n\t\t--\"posix\"; -- POSIX functionality, sends server to background, enables syslog, etc.\r\n\t\t--\"groups\"; -- Shared roster support\r\n\t\t--\"announce\"; -- Send announcement to all online users\r\n\t\t--\"welcome\"; -- Welcome users who register accounts\r\n\t\t--\"watchregistrations\"; -- Alert admins of registrations\r\n\t\t--\"motd\"; -- Send a message to users when they log in\r\n\t\t--\"legacyauth\"; -- Legacy authentication. Only used by some old clients and bots.\r\n};\r\n\r\n-- These modules are auto-loaded, but should you want\r\n-- to disable them then uncomment them here:\r\nmodules_disabled = {\r\n\t-- \"offline\"; -- Store offline messages\r\n\t-- \"c2s\"; -- Handle client connections\r\n\t-- \"s2s\"; -- Handle server-to-server connections\r\n};\r\n\r\n-- Disable account creation by default, for security\r\n-- For more information see http://prosody.im/doc/creating_accounts\r\nallow_registration = false;\r\n\r\n-- These are the SSL/TLS-related settings. If you don't want\r\n-- to use SSL/TLS, you may comment or remove this\r\nssl = {\r\n\tkey = \"/usr/local/etc/prosody/certs/localhost.key\";\r\n\tcertificate = \"/usr/local/etc/prosody/certs/localhost.crt\";\r\n}\r\n\r\n-- Force clients to use encrypted connections? This option will\r\n-- prevent clients from authenticating unless they are using encryption.\r\n\r\nc2s_require_encryption = false\r\n\r\n-- Force certificate authentication for server-to-server connections?\r\n-- This provides ideal security, but requires servers you communicate\r\n-- with to support encryption AND present valid, trusted certificates.\r\n-- NOTE: Your version of LuaSec must support certificate verification!\r\n-- For more information see http://prosody.im/doc/s2s#security\r\n\r\ns2s_secure_auth = false\r\n\r\n-- Many servers don't support encryption or have invalid or self-signed\r\n-- certificates. You can list domains here that will not be required to\r\n-- authenticate using certificates. They will be authenticated using DNS.\r\n\r\n--s2s_insecure_domains = { \"gmail.com\" }\r\n\r\n-- Even if you leave s2s_secure_auth disabled, you can still require valid\r\n-- certificates for some domains by specifying a list here.\r\n\r\n--s2s_secure_domains = { \"jabber.org\" }\r\n\r\n-- Select the authentication backend to use. The 'internal' providers\r\n-- use Prosody's configured data storage to store the authentication data.\r\n-- To allow Prosody to offer secure authentication mechanisms to clients, the\r\n-- default provider stores passwords in plaintext. If you do not trust your\r\n-- server please see http://prosody.im/doc/modules/mod_auth_internal_hashed\r\n-- for information about using the hashed backend.\r\n\r\nauthentication = \"internal_plain\"\r\n\r\n-- Select the storage backend to use. By default Prosody uses flat files\r\n-- in its configured data directory, but it also supports more backends\r\n-- through modules. An \"sql\" backend is included by default, but requires\r\n-- additional dependencies. See http://prosody.im/doc/storage for more info.\r\n\r\nstorage = \"sql\" -- Default is \"internal\"\r\n\r\n-- For the \"sql\" backend, you can uncomment *one* of the below to configure:\r\n--sql = { driver = \"SQLite3\", database = \"prosody.sqlite\" } -- Default. 'database' is the filename.\r\nsql = { driver = \"MySQL\", database = \"_Engines_Environment(dbname)\", username = \"_Engines_Environment(dbuser)\", password = \"_Engines_Environment(dbpasswd)\", host = \"_Engines_Environment(dbhost)\" }\r\n--sql = { driver = \"PostgreSQL\", database = \"prosody\", username = \"prosody\", password = \"secret\", host = \"localhost\" }\r\n\r\n-- Logging configuration\r\n-- For advanced logging see http://prosody.im/doc/logging\r\nlog = {\r\n\tinfo = \"prosody.log\"; -- Change 'info' to 'debug' for verbose logging\r\n\terror = \"prosody.err\";\r\n\t\"*syslog\"; -- Uncomment this for logging to syslog\r\n\t-- \"*console\"; -- Log to the console, useful for debugging with daemonize=false\r\n}\r\n\r\n----------- Virtual hosts -----------\r\n-- You need to add a VirtualHost entry for each domain you wish Prosody to serve.\r\n-- Settings under each VirtualHost entry apply *only* to that host.\r\n\r\nVirtualHost \"localhost\"\r\n\r\nVirtualHost \"_Engines_Builder(domain_name)\"\r\n\t-- enabled = false -- Remove this line to enable this host\r\nenabled = true\r\n\t-- Assign this host a certificate for TLS, otherwise it would use the one\r\n\t-- set in the global section (if any).\r\n\t-- Note that old-style SSL on port 5223 only supports one certificate, and will always\r\n\t-- use the global one.\r\n\tssl = {\r\n\t\tkey = \"/usr/local/etc/prosody/certs/example.com.key\";\r\n\t\tcertificate = \"/usr/local/etc/prosody/certs/example.com.crt\";\r\n\t}\r\n\r\n------ Components ------\r\n-- You can specify components to add hosts that provide special services,\r\n-- like multi-user conferences, and transports.\r\n-- For more information on components, see http://prosody.im/doc/components\r\n\r\n---Set up a MUC (multi-user chat) room server on conference.example.com:\r\n--Component \"conference.example.com\" \"muc\"\r\n\r\n-- Set up a SOCKS5 bytestream proxy for server-proxied file transfers:\r\n--Component \"proxy.example.com\" \"proxy65\"\r\n\r\n---Set up an external component (default component port is 5347)\r\n--\r\n-- External components allow adding various services, such as gateways/\r\n-- transports to other networks like ICQ, MSN and Yahoo. For more info\r\n-- see: http://prosody.im/doc/components#adding_an_external_component\r\n--\r\n--Component \"gateway.example.com\"\r\n--\tcomponent_secret = \"password\"\r\n"}],"file_write_permissions":[],"custom_php_inis":[],"apache_htaccess_files":[],"apache_httpd_configurations":[],"modules":[{"os_package":"","module_name":"luasec","module_type":"luarocks"},{"os_package":"","module_name":"luafilesystem","module_type":"luarocks"},{"os_package":"","module_name":"luasocket","module_type":"luarocks"},{"os_package":"","module_name":"luaexpat","module_type":"luarocks"},{"os_package":"","module_name":"LuaDBI","module_type":"luarocks"},{"os_package":"libmysqlclient-dev","module_name":"LuaSQL-MySQL","module_type":"luarocks"}],"variables":[{"name":"admin_user","value":"","label":"Administrators name","field_type":"","select_collection":"","tooltip":"","hint":"Used for admin login","placeholder":"","comment":"","regex_validator":"","regex_invalid_message":"","mandatory":true,"ask_at_build_time":true,"build_time_only":false,"immutable":false},{"name":"admin_password","value":"","label":"Admin Password","field_type":"password","select_collection":"","tooltip":"","hint":"","placeholder":"","comment":"","regex_validator":"","regex_invalid_message":"","mandatory":true,"ask_at_build_time":true,"build_time_only":true,"immutable":false}],"component_sources":[],"component_path":"","extract_components":false,"installation_report_template":"Jabber xmmp server published on _Engines_Builder(domain_name)\r\nadmin user is _Engines_Environment(admin_user )","continuous_deployment":false,"database_seed_file":""}}